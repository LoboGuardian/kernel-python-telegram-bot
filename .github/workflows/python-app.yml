# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application CI - kernel-telegram-bot

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python3 -
          echo "$HOME/.local/bin" >> $GITHUB_PATH
        
    - name: Install dependencies with Poetry
        run: |
          poetry install --no-interaction --no-root

    - name: Lint with flake8
        run: |
          poetry run flake8 src/ --ignore=E501

    - name: Run tests with pytest
        run: |
          poetry run pytest

#    - name: Lint with flake8
#      run: |
#        # stop the build if there are Python syntax errors or undefined names
#        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
#        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#        
#    - name: Test with pytest
#      run: |
#        pytest

# Optional: deploy or run the bot
  # deploy:
  #   runs-on: ubuntu-latest
  #   needs: build-and-lint
  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
  #     - name: Run the bot (for preview/test, not recommended in CI)
  #       run: python src/main.py
