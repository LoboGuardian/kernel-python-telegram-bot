# ====================================================
# PYTHON PROJECT .gitignore â€” Clean & Complete
# ====================================================

# ----------------------------------------
# Python Bytecode, Caches, & Metadata
# ----------------------------------------
__pycache__/
*.py[cod]
*.pyo
*.pyd
*.pyc
*$py.class
*.egg
*.egg-info/
.Python

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
.python-version

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# ----------------------------------------
# C Extensions
# ----------------------------------------
*.so
*.pyd

# ----------------------------------------
# Build / Distribution / Packaging
# ----------------------------------------

# Standard build and distribution directories
build/
dist/
sdist/
wheels/

# Python Egg related directories and files (legacy packaging format)
develop-eggs/
eggs/
.eggs/
.eggs-info/
*.egg-info/
*.egg

# Distribution archives
*.tar.gz
*.zip
*.whl

# Packaging metadata and specifications
*.manifest
*.spec
MANIFEST
.installed.cfg

# Python runtime environment related
.Python
lib/
lib64/
share/python-wheels/

# Project specific or temporary directories (less standard for distribution)
downloads/
parts/
var/

# ----------------------------------------
# Environments & Dependency Managers
# ----------------------------------------
env/
*.env
.env.*
!env.example
.venv/
venv/
ENV/
env.bak/
venv.bak/

# PEP 582; used by e.g. github.com/David-OConnor/pyflow and github.com/pdm-project/pdm
__pypackages__/

# pipenv
Pipfile
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
Pipfile.lock

# poetry
#   Similar to Pipfile.lock, it is generally recommended to include poetry.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
#   https://python-poetry.org/docs/basic-usage/#commit-your-poetrylock-file-to-version-control
poetry.lock
poetry.toml
.poetry_cache/

# pdm
#   Similar to Pipfile.lock, it is generally recommended to include pdm.lock in version control.
pdm.lock
#   pdm stores project-wide configurations in .pdm.toml, but it is recommended to not include it
#   in version control.
#   https://pdm.fming.dev/latest/usage/project/#working-with-version-control
.pdm.toml
.pdm-python
.pdm-build/

# UV
#   Similar to Pipfile.lock, it is generally recommended to include uv.lock in version control.
#   This is especially recommended for binary packages to ensure reproducibility, and is more
#   commonly ignored for libraries.
uv.lock


# ----------------------------------------
# Installer & Debug Logs
# ----------------------------------------

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Debug logs
*.log
*.pid
*.seed
*.pid.lock
debug.log
telegram_bot.log
logs/

# Cython debug symbols
cython_debug/

# ----------------------------------------
# Translations
# ----------------------------------------
*.mo
*.pot

# ----------------------------------------
# Testing, Coverage & Hypothesis
# ----------------------------------------
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache/
nosetests.xml
coverage.xml
pytestdebug.log
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
cover/

# ----------------------------------------
# Type Checking
# ----------------------------------------

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# ----------------------------------------
# Test Framework Artifacts
# ----------------------------------------

# PyBuilder
.pybuilder/
target/

# ----------------------------------------
# Web Frameworks
# ----------------------------------------

# Django
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask
instance/
.webassets-cache

# Scrapy
.scrapy

# Sphinx documentation
docs/_build/

# mkdocs
/site

# ----------------------------------------
# Notebooks & IPython
# ----------------------------------------

# Jupyter Notebook
.ipynb_checkpoints/

# IPython
profile_default/
ipython_config.py

# ----------------------------------------
# Task Queues (e.g. Celery)
# ----------------------------------------
celerybeat-schedule
celerybeat.pid

# -----------------------------------------
# SageMath parsed files
# -----------------------------------------
*.sage.py

# ----------------------------------------
# Editor & IDE Files
# ----------------------------------------
.vscode/

# PyCharm
#  JetBrains specific template is maintained in a separate JetBrains.gitignore that can
#  be found at https://github.com/github/gitignore/blob/main/Global/JetBrains.gitignore
#  and can be added to the global gitignore or merged into this file.  For a more nuclear
#  option (not recommended) you can uncomment the following to ignore the entire idea folder.
.idea/


*.sublime-project
*.sublime-workspace
*.iml

# Vim/Vi swap and backup files
*.swp
*.swo
*.swn
*.bak
*~
*.tmp
*.temp

# Spyder
.spyderproject
.spyproject

# Rope
.ropeproject

# ----------------------------------------
# OS Generated Files
# ----------------------------------------
.DS_Store
Thumbs.db
desktop.ini
$RECYCLE.BIN/

# ----------------------------------------
# Databases & Journals
# ----------------------------------------
*.db
*.sqlite
*.sqlite3
database.sqlite3
bot_database.db
/db/

# ----------------------------------------
# Secrets & Credentials (Use with Caution)
# ----------------------------------------

# Credentials
*.env
.env.*
!env.example

# PyPI configuration file
.pypirc
Pipfile.lock

# SSH keys
id_rsa
id_rsa.pub
*.pem
*.key


# ----------------------------------------
# Docker
# ----------------------------------------
Dockerfile
docker-compose.yml
.dockerignore
